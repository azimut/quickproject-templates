name: Static Build
on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
jobs:
  container:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest
    container:
      image: clfoundation/sbcl:alpine3.14
    steps:
      - uses: actions/checkout@v2

      - name: APK build deps
        run: |
          apk add --no-cache ca-certificates curl openssl make gcc musl-dev linux-headers gnupg patch zlib-dev zlib-static git tar bash xz openssh-client-common zstd musl-dbg

      - run: mkdir -pv ~/build
      - name: Get Current Month
        id: current-month
        run: echo "::set-output name=value::$(date -u '+%Y-%m')"
      - name: Cache SBCL 2.1.9 Setup
        id: cache
        uses: actions/cache@v2
        env:
          cache-name: cache-alpine-static-sbcl-2.1.9-nuke
        with:
          path: |
            ~/build
            ~/quicklisp
            ~/.cache/common-lisp
          key: "${{ steps.current-month.outputs.value }}-${{ env.cache-name }}-${{ runner.os }}"

      # BUILD
      - name: Build SBCL 2.1.9
        run: |
          export SBCL_ARCH=x86-64
          cd ~/build/
          git clone -b static-executable-v2-2.1.9 https://github.com/daewok/sbcl
          cd sbcl/
          git fetch
          sh make.sh --fancy --with-sb-linkable-runtime --with-sb-prelink-linkage-table
          mkdir -vp ~/build/binary
          INSTALL_ROOT=~/build/binary sh install.sh
        if: steps.cache.outputs.cache-hit != 'true'

      - name: First time Install quicklisp
        run: |
          cd ~/build/sbcl
          wget https://beta.quicklisp.org/quicklisp.lisp
          sh run-sbcl.sh --non-interactive \
               --eval '(load "quicklisp.lisp")' \
               --eval '(quicklisp-quickstart:install)' \
               --eval '(ql-util:without-prompting (ql:add-to-init-file))' \
               --eval '(ql:update-all-dists)' \
               --eval '(ql-dist:install-dist "http://bodge.borodust.org/dist/org.borodust.bodge.txt" :replace t :prompt nil)'
        if: steps.cache.outputs.cache-hit != 'true'

      # Step 0: gather deps
      - name: apk deps
        run: |
          cd ~/build
          apk add --no-cache expat brotli-dev brotli-static woff2-dev libwoff2common expat-dev expat-static libwebp zstd-static bzip2-dev bzip2-static tiff libpng lcms2 libjpeg-turbo-dev libtool fontconfig freetype sdl2-dev | tee apks.log
          apk add --no-cache --force-broken-world $(cat ~/build/apks.log | grep Installing | cut -f3 -d' ' | fgrep -v -- '-dev' | sort | uniq | sed 's#$#-dev#g')
          apk add --no-cache --force-broken-world bzip2-static $(cat ~/build/apks.log | grep Installing | cut -f3 -d' ' | fgrep -v -- '-static' | sort | uniq | sed 's#$#-static#g')


      - name: make static
        run: |
          make static

      - uses: actions/upload-artifact@v2
        with:
          name: sbcl-static-gmp
          path: |
            /tmp
          if-no-files-found: error

      - name: DEBUG SHELL
        #uses: lhotari/action-upterm@v1
        #uses: mxschmitt/action-tmate@v3
        uses: seemethere/action-tmate@skip_dependency_installation
        if: ${{ failure() }}
        with:
          install_dependencies: false
          sudo: false
